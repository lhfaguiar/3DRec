library ieee ;
use ieee.std_logic_1164.all ;
use ieee.numeric_std.all ;


entity neuron is
    port (
        X, W : in std_logic_vector(15 downto 0) ;
        Y : out std_logic_vector(31 downto 0) ;
        addr_img, addr_wei : out std_logic_vector(31 downto 0) ;
        clock, resetn : in std_logic;
        base_addr : in std_logic_vector(31 downto 0);
        n         : in std_logic_vector(7 downto 0);
        done : out std_logic;
        enable_read_ram : in std_logic;
        enable_mac : in std_logic
    ) ;
end neuron ;


architecture arch of neuron is

    component mac
        port (
            X, W   : in  std_logic_vector(15 downto 0);
            Y      : out std_logic_vector(31 downto 0);
            enable : in  std_logic;
            clock, resetn : in std_logic
        );
    end component mac;





    signal addr : std_logic_vector(31 downto 0);

begin

    Relu0 : relu port map ( reg, out_relu );


    addr_wei <= addr;
    addr_img <= addr;
    mac_0 : mac
        port map (
            clock => clock,
            resetn => resetn,
            enable => enable_mac,
            X      => X,
            W      => W,
            Y      => Y
        );

end architecture ;
